package Main;
import java.awt.*;
import java.awt.event.*;
import java.util.Calendar;

import javax.swing.*;

// 메인폼에서 -> 사용자버튼 클릭시 나오는 화면
public class CuisineForm extends JFrame{
	private String [] img_s = {"menu_1.png", "menu_2.png", "menu_3.png","menu_4.png"}; // 이미지 경로
	private String [] menu_s = {"한식", "중식", "일식", "양식"}; // 메뉴 이름
	private ImageIcon [] img; // 이미지가 들어갈 곳
	private JButton [] btns; // 버튼들
	public CuisineForm() {
		setTitle("식권 발매 프로그램");
		// x버튼을 클릭했을 때 메인폼으로
		this.addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosing(WindowEvent e) {new MainForm();}
		});
		
		this.add(new NorthP(), BorderLayout.NORTH);
		this.add(new CenterP(), BorderLayout.CENTER);
		this.add(new SouthP(), BorderLayout.SOUTH);
		
		setSize(500,800);
		setVisible(true);
	}
	// 타이틀, 상단
	class NorthP extends JPanel{
		public NorthP() {
			JLabel label = new JLabel("식권 발매 프로그램");
			label.setFont(new Font("SanSerif", Font.BOLD, 30));
			this.add(label);
		}
	}
	// 중간
	class CenterP extends JPanel{
		public CenterP() {
			JTabbedPane tab = new JTabbedPane(); // tab
			tab.add("메뉴",new ImgP()); // 메뉴탭안에 ImgP panel을 올림
			this.add(tab); // 추가
		}
	}
	// 이미지 버튼을 만드는 panel
	class ImgP extends JPanel{
		public ImgP() {
			this.setLayout(new GridLayout(2,2)); // 2행 2열
			
			img = new ImageIcon[img_s.length]; // 이미지 아이콘 배열 생성
			btns = new JButton[menu_s.length]; // 버튼 배열 생성
			
			for(int i=0; i<img.length; i++) {
				img[i] = new ImageIcon(getClass().getClassLoader().getResource(img_s[i])); // 이미지 아이콘안에 이미지 경로안에 있는 이미지를 넣기
				btns[i] = new JButton(img[i]); // 버튼 안에 이미지 아이콘 넣기
				btns[i].setToolTipText(menu_s[i]); // 버튼에 툴팁(마우스 포커스가 가면 글자나오게)
				// 버튼 클릭시 각 메뉴에 맞는 결제폼으로 가도록
				btns[i].addActionListener(new ActionListener() {
					@Override
					public void actionPerformed(ActionEvent e) {
						JButton button = (JButton) e.getSource(); // 클릭한 버튼을 받아옴
						dispose(); // 현재폼 닫기 
						new BuyForm(button.getToolTipText()); // 클릭한 버튼의 툴팁 text값을 보냄, 메뉴명
					}
				});
				this.add(btns[i]);
			}
		}
	}
	// 현재시간 panel, 하단
	class SouthP extends JPanel{
		public SouthP() {
			this.setBackground(Color.DARK_GRAY);
			
			JLabel timelabel = new JLabel(); // 현재 시간을 보여줄 label
			// 디자인
			timelabel.setFont(new Font("SanSerif", Font.BOLD, 20));
			timelabel.setForeground(Color.CYAN);
			this.add(timelabel); // label 추가
			
			// thread 실행, label을 넘겨줌
			Time th = new Time(timelabel);
			th.start();
		}
	}
	// 현재 시간 thread, 시간이 흐르도록
	class Time extends Thread{
		private JLabel timerLabel; // 변경될 label 값
		public Time(JLabel timerLabel) {this.timerLabel = timerLabel;}
		@Override
		public void run() {
			while(true) {
				Calendar cal = Calendar.getInstance(); // 현재 컴퓨터의 날짜와시간을 가져옴
				int year = cal.get(Calendar.YEAR); // 년
				int month = cal.get(Calendar.MONTH)+1; // 월
				int day  = cal.get(Calendar.DAY_OF_MONTH); // 일
				int hour = cal.get(Calendar.HOUR_OF_DAY); // 시
				int min = cal.get(Calendar.MINUTE); // 분
				int sec = cal.get(Calendar.SECOND); // 초
					
				timerLabel.setText("현재시간 : " + year + "년 " + month + "월 " + day + "일 " + hour + "시 " + min + "분 " + sec + "초 ");
				try {
					Thread.sleep(1000); // 1초당, calendar에서 값을 가져와 text값 변경
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
		}
	}
}
